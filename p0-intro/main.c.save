q/*
 * CS 261: Intro project driver
 *
 * Name: 
 */

#include "p0-intro.h"

int main (int argc, char **argv)
{
    // argc number of arguements
    // argv Array of strings
    char c;

    bool gflag = false;

    bool cflag = false;
    char* cArg = NULL;

    bool tflag = false;
    char* tArg  = NULL;

    bool uflag = false;
    char* uArg  = NULL;

    while((c = getopt(argc,argv,"-gc:t:u:")) != -1){
        switch(c){
            case 'g':
                gflag = true;
                break;
            case 'c':
                cflag = true;
                cArg = optarg;
                break;

            case 't':
                //Suggested Changes
                tflag = true;
                tArg = optarg;
                break;

            case 'u':
                uflag = true;
                uArg = optarg;
                break;
            default:
                printf("Invalid argument.\n");
                exit(1);
        }
    }
    if(!gflag && !cflag && !tflag && !uflag){
        printf("Hello, world!\n");
    }

    if(gflag){
        printf("Goodbye!\n");
    }


    // Cat mode ("-c <file>")
    if(cflag){
        FILE* textfile;
        char line[100];
        if(cArg == NULL){
            printf("Invalid argument.\n");
            exit(1);
        }
       
        if(textfile = fopen(cArg, "r"))
        {
            fclose(textfile);
        } else {
            printf("Invalid file.\n");
            exit(1);
        } 

        textfile = fopen(cArg, "r");
        while(fgets(line, 128, textfile)){
            printf(line);
        }
        fclose(textfile);
    }
        
    

    

    if(tflag == true){
        if(tArg == NULL){
            printf("Invalid argument.\n");
        }
        int n = strtol(tArg, NULL, 10);
        for(int i = 1; i <= n; i++){
            if(i % 2 != 0 && i % 3 == 0){
                printf("triodd\n");
            } else if(i % 2 != 0){
                printf("odd\n");
            } else if(i % 3 == 0){
                printf("tri\n");
             } else{
                printf("%d\n",i);
             }
        }
    }


    if(uflag == true){
        FILE* textfile;
        char line[100];
        char temp[100];
        size_t size;

        if(uArg == NULL){
            printf("Invalid argument.\n");
            exit(1);
        }
       
        if(textfile = fopen(uArg, "r"))
        {
            fclose(textfile);
        } else {
            printf("Invalid file.\n");
            exit(1);
        } 

        textfile = fopen(uArg, "r");
        while(fgets(line, 128, textfile)){
            // temp is not being inialized
            if(strncmp(line,temp, 100) != 0) {
                printf(line);
            }
            size = sizeof (line);

            snprintf(temp, size, "%s", line);
          }
        fclose(textfile);
    }

    return EXIT_SUCCESS;
}

